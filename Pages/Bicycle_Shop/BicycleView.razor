@page "/bicycles"
@using System.Net.Http
@using System.Collections.Generic
@inject HttpClient HttpLib

<div class="row">
    <div class="col-3 card card-body bg-light mt-2">
        <h4>Filters</h4>
        <div class="card mb-1">
            <div class="card-header">
                Model Type
            </div>
            <div class="card-body">
                @foreach (var item in filter_modelTypes)
                {
                    <div class="form-check">
                    <input class="form-check-input" type="radio" name="model-type" id="model-@item">
                    <label class="form-check-label" for="model-type">
                        @item
                    </label>
                </div>
                }

            </div>
        </div>

        <div class="card mb-1">
            <div class="card-header">
                Construction
            </div>
            <div class="card-body">
                @foreach (var item in filter_construction)
                {
                    <div class="form-check">
                    <input class="form-check-input" type="radio" name="construction-type" id="construction-@item">
                    <label class="form-check-label" for="construction-type">
                        @item
                    </label>
                </div>
                }
            </div>
        </div>

        
        <div class="card mb-1">
            <div class="card-header">
                Pricing
            </div>
            <div class="card-body">
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>Min</label>
                        <input type="number" class="form-control" id="priceMax" placeholder="$0">
                    </div>

                    <div class="form-group col-md-6 text-right">
                        <label>Max</label>
                        <input type="number" class="form-control" id="priceMax" placeholder="$1,000">
                    </div>
                </div>

                <button class='btn btn-outline-success w-100'>Save Changes</button>
                
            </div>
        </div>

        <button class="btn btn-outline-primary">Apply Changes</button>
    </div>
    <div class="col-9">

        <div class="card card-body bg-light mt-2">
            @if (bicycles == null)
            {
                <p>Loading bicycles...</p>
            }
            else
            {
                <div class="card-deck">
                @foreach (var bike in bicycles)
                {
                        <div class="card m-1" style="min-width: 18rem; max-width:33.0%;">
                            <div class="card-header">
                                <h5 class="card-title">@bike.Modeltype<span class="badge badge-pill badge-primary float-right">$@bike.Listprice</span></h5>
                            </div>
                            <div class="card-body">
                                <h6><span class="badge badge-pill badge-secondary">@bike.Construction</span> <span class="badge badge-pill badge-secondary">@bike.Paintid</span> <span class="badge badge-pill badge-secondary">@bike.Framesize FRAMESIZE</span></h6>
                                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                                <a href="#" class="btn btn-outline-primary">View</a>
                                <a href="#" class="btn btn-outline-success">Add To Cart</a>
                            </div>
                        </div>
                }
                </div>
            }

        </div>

    </div>
</div>
<div class="row">
</div>

@code {

    Bicycle[] bicycles;

    private int pageSize = 10;
    private int pageNumber = 1;

    public List<string> filter_modelTypes = new List<string>() {"Hybrid", "Mountain", "Race", "Road", "Tour", "Track"};

    public List<string> filter_construction = new List<string>() {"Tig Welded", "Welded", "Bonded"};

    protected override async Task OnInitializedAsync() {
        var bicycleList = await HttpLib.GetFromJsonAsync<Bicycle[]>($"api/bicycles?pageNumber={pageNumber}&pageSize={pageSize}");
        
        if(bicycleList.Any()) {
            bicycles = bicycleList;
        }
    }
    
}
