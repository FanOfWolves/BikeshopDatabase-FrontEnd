@page "/customers"
@using System.Net.Http
@inject HttpClient HttpLib

<h1>Customer</h1>


@if (CustomerList != null)
{

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Address</th>
                <th>Balance</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cust in CustomerList)
            {
                <tr>
                    <td>@cust.Customerid</td>
                    <td>@cust.Firstname @cust.Lastname</td>
                    <td>@cust.Address</td>
                    <td>$@cust.Balancedue</td>
                </tr>
            }
        </tbody>
    </table>

    <button id="randomCustomer" class="btn btn-primary" @onclick="RandomCustomer">Click me!</button>

}
else
{
    <p>Loading Customers...</p>
}



@if (Customer != null)
{
    <p>@Customer.Firstname @Customer.Lastname - @Customer.Address (Balance: $@Customer.Balancedue)</p>
}

@code {

    private int pageSize = 10;
    private int pageNumber = 1;
    private Customer[] CustomerList;

    private Customer Customer;

    private Random random = new Random();

    protected override async Task OnInitializedAsync()
    {
        var customerList = await HttpLib.GetFromJsonAsync<Customer[]>($"api/customer?pageNumber={pageNumber}&pageSize={pageSize}");
        
        if (customerList.Any())
        {
            CustomerList = customerList;
        }
            
    }

    private async Task<Customer[]> Paginate()
    {
        return await HttpLib.GetFromJsonAsync<Customer[]>($"api/customer?pageNumber={pageNumber}&pageSize={pageSize}");
    }

    public async Task RandomCustomer()
    {
        Customer = await HttpLib.GetFromJsonAsync<Customer>("api/customer/" + random.Next(1, 5000).ToString());
    }

    public async void PreviousPage()
    {
        Console.WriteLine("clicked previous");
        pageNumber--;

        CustomerList = await Paginate();
    }

    public async void NextPage()
    {
        Console.WriteLine("clicked");
        pageNumber++;

        CustomerList = await Paginate();
    }
    
}
